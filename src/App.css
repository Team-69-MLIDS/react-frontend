.dropdown {
    color: black;
}

#RunID {
    margin: 0.5rem;
}

.runConfigurator {
    border: 1px solid white;
    color: black;
    padding: 2rem;
    background-color: #d9d9d9;
}

.container {
    display: flex;
    flex-direction: row;
    width: 100vw;
    height: 100vh;
}

#compare {
    background-color: black;
    flex: 4;
    padding: 1rem;
    overflow-y: auto;
}

.sidebar {
    display: flex;
    flex-direction: column;
    flex: 1;
    padding: 1rem;
    background-color: #4d4d4d;
    overflow-y: auto;
}

.modelInputs {
    display: flex;
    flex-direction: column;
}

.configuratorOptions {
    text-align: center;
}

.tabTitle {
    color: black;
}

/* Output */

.outputContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: row;
}

.runOutput {
    display: flex;
    border: 1px solid white;
    flex: 1;
    text-align: center;
    flex-direction: column;
}

.confusionMatrix {
    max-width: 100%;
}

.confusionMatrixImage {
    max-width: 100%;
}

.outputHeading {
    justify-content: center;
}

.outputColumn {
    border: 1px solid white;
    display: flex;
    flex: 1;
    justify-content: center;
    flex-direction: column;
    position: relative;
}

.runOutputColumns {
    display: flex;
    flex-direction: row;
}

.outputTable {
    display: flex;
    font-size: large;
    flex: 1;
    justify-content: space-evenly;
}

.table {
    width: 100%;
}

.averageValues {
    text-align: left;
    margin: auto;
}

/* Hyperparameters */

.hyperParamDiv {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.hyperParamInput {
    width: 60px;
}

.hyperParamLabel {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

/* Border */

.border {
    border: 1px solid white;
}

/* Search */

.searchList {
    border: 1px solid white;
    color: black;
    padding: 2rem;
    background-color: #d9d9d9;
    display: flex;
    flex-direction: column;
    justify-content: left;
}

.searchOptions {
    margin: 0.5rem;
}

.runSelectContainer {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
}

.runSelect {
    cursor: pointer;
    font-size: 14px;
    margin: 0 0.25rem;
}

.loading {
    position: absolute;
    top: 50%;
    left: 60%;
    transform: translate(-50%, -50%);
}

/* Collapsable */

.Collapsible {
    cursor: pointer;
}
.Collapsible__trigger {
    display: block;
    font-weight: 400;
    text-decoration: none;
    position: relative;
    border: 1px solid white;
    padding: 10px;
    background: gray;
    color: white;

    &:after {
        transition: transform 300ms;
        content: "";
        position: absolute;
        top: 50%;
        right: 10px;
        border: solid black;
        border-width: 0 4px 4px 4px; /* Adjust the border-width for the correct angle */
        border-color: transparent transparent black transparent; /* Adjust border-color */
        display: inline-block;
        width: 0;
        height: 0;
    }

    &.is-open {
        &:after {
            transform: rotateZ(180deg);
        }
    }

    &.is-disabled {
        opacity: 0.5;
        background-color: grey;
    }
}

/* Search Bar */

.searchBarContainer {
    width: 100%;
    display: flex;
    justify-content: center;
    flex-direction: column;
    padding-bottom: 10px;
}

.calendarContainer {
    text-align: center;
}

.searchBar {
    width: 100%;
    height: 30px;
}

/* Target the day labels */
.react-calendar__month-view__days__day {
    color: black;
}

/* Target the month and year headers */
.react-calendar__month-view__weekdays__weekday,
.react-calendar__navigation__label {
    color: black;
}

/* Target the selected day */
.react-calendar__tile--active {
    color: black;
}

.react-calendar__navigation button {
    color: black; /* Set the color of the arrows to black */
}
